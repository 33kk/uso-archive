{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Navbar, Row, Col, Container, Spinner, Input, Button } from \"sveltestrap\";\n\timport StyleCard from \"./StyleCard.svelte\";\n\timport Pagination from \"./Pagionation.svelte\";\n\timport StyleModal from \"./StyleModal.svelte\";\n\n\tconst dataPrefix = \"https://raw.githubusercontent.com/33kk/uso-archive/flomaster/data/\";\n\n\tlet styles = [];\n\tlet filteredStyles = [];\n\tlet paginatedStyles = [];\n\n\tlet filters = {\n\t\tsearch: \"\",\n\t\tcategory: \"\",\n\t\tauthor: \"\",\n\t\tformat: \"\",\n\t};\n\tlet inputs = {\n\t\tsearch: \"\",\n\t\tcategory: \"\",\n\t\tauthor: \"\",\n\t\tformat: \"\",\n\t};\n\tlet pagination = {\n\t\tpage: 1,\n\t\ttotalPages: 1,\n\t\tperPage: 20,\n\t};\n\n\tconst sortDropdownItems = [\n\t\t{ id: \"weekly-installs\", label: \"Weekly Installs\" },\n\t\t{ id: \"total-installs\", label: \"Total Installs\" },\n\t\t{ id: \"rating\", label: \"Rating\" },\n\t\t{ id: \"updated\", label: \"Updated\" },\n\t\t{ id: \"newest\", label: \"Newest\" },\n\t];\n\n\tconst formatDropdownItems = [\n\t\t{ id: \"\", label: \"Any\" },\n\t\t{ id: \"uso\", label: \"UserStyles.org\" },\n\t\t{ id: \"usercss\", label: \"UserCSS\" },\n\t];\n\n\tlet modalStyleId = \"\";\n\tlet modalIsOpen = false;\n\n\tconst defaultSorting = \"weekly-installs\";\n\tlet sorting = defaultSorting;\n\tlet sortDropdownOpen = false;\n\tfunction setSorting(val) {\n\t\tsorting = val;\n\t}\n\n\tlet formatDropdownOpen = false;\n\n\tlet query = new URLSearchParams(window.location.search);\n\tloadStateFromQuery(query);\n\n\t$: styles = sortStyles(styles, sorting);\n\n\t$: filteredStyles = filterStyles(styles, filters);\n\n\t$: paginatedStyles = paginateStyles(filteredStyles, pagination.page, pagination.perPage);\n\n\t$: pagination.totalPages = Math.ceil(filteredStyles.length / pagination.perPage);\n\n\tfunction paginateStyles(styles, page, perPage) {\n\t\treturn styles.slice((page - 1) * perPage, page * perPage);\n\t}\n\n\tfunction sortStyles(styles, sorting) {\n\t\tswitch (sorting) {\n\t\t\tcase \"weekly-installs\":\n\t\t\t\tstyles.sort((a, b) => b.w - a.w);\n\t\t\t\tbreak;\n\t\t\tcase \"total-installs\":\n\t\t\t\tstyles.sort((a, b) => b.t - a.t);\n\t\t\t\tbreak;\n\t\t\tcase \"rating\":\n\t\t\t\tstyles.sort((a, b) => (b.r || 1) - (a.r || 1));\n\t\t\t\tbreak;\n\t\t\tcase \"updated\":\n\t\t\t\tstyles.sort((a, b) => b.u - a.u);\n\t\t\t\tbreak;\n\t\t\tcase \"newest\":\n\t\t\t\tstyles.sort((a, b) => b.i - a.i);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn styles;\n\t}\n\n\tfunction filterStyles(styles, filters) {\n\t\tlet filtered = [];\n\t\tconst { search, category, author, format } = filters;\n\t\tif (search.trim().length > 0 || category.trim().length > 0 || author.trim().length > 0 || format !== \"\") {\n\t\t\tconst rgx = search ? new RegExp(createFuzzySearchRegex(search), \"i\") : undefined;\n\t\t\tconsole.log(styles[0]);\n\t\t\tfor (const style of styles) {\n\t\t\t\tif ((!rgx || rgx.test(style.n) || (style.d && rgx.test(style.d)) || style.i.toString() === search) && (!category || style.c === category) && (!author || style.an === author || (style.ai && style.ai.toString() === author)) && (!format || style.f === format)) {\n\t\t\t\t\tfiltered.push(style);\n\t\t\t\t}\n\t\t\t}\n\t\t} else filtered = styles;\n\t\treturn filtered;\n\t}\n\n\tfunction createFuzzySearchRegex(searchText) {\n\t\tsearchText = searchText.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n\t\tlet words = searchText.split(\" \");\n\t\tlet result = \"\";\n\t\tfor (const word of words) {\n\t\t\tlet wordResult = \"\";\n\t\t\tconst chars = word.split(\"\");\n\t\t\tfor (const char of chars) {\n\t\t\t\twordResult += char + \".?\";\n\t\t\t}\n\t\t\twordResult = wordResult.slice(0, wordResult.length - 2);\n\t\t\tresult += wordResult + \".*?\";\n\t\t}\n\t\tresult = result.slice(0, result.length - 3);\n\t\treturn result;\n\t}\n\n\tfunction update() {\n\t\tpagination.page = 1;\n\t\tfilters = inputs;\n\t}\n\n\tfunction reset() {\n\t\tpagination.page = 1;\n\t\tinputs = {\n\t\t\tsearch: \"\",\n\t\t\tcategory: \"\",\n\t\t\tauthor: \"\",\n\t\t};\n\t\tfilters = inputs;\n\t}\n\n\tfunction onKeyPress(e) {\n\t\tif (e.which === 13 || e.keyCode === 13 || event.key === \"Enter\") {\n\t\t\tupdate();\n\t\t}\n\t}\n\n\tfunction onView({ detail: { styleId } }) {\n\t\tmodalStyleId = styleId.toString();\n\t\tmodalIsOpen = true;\n\t}\n\n\tfunction onPopState(event) {\n\t\tquery = new URLSearchParams(event.state);\n\t\tloadStateFromQuery(query);\n\t}\n\n\tfunction loadStateFromQuery(query) {\n\t\tsorting = query.get(\"sort\") || defaultSorting;\n\t\tinputs.search = query.get(\"search\") || \"\";\n\t\tinputs.category = query.get(\"category\") || \"\";\n\t\tinputs.author = query.get(\"author\") || \"\";\n\t\tinputs.format = query.get(\"format\") || \"\";\n\t\tpagination.page = parseInt(query.get(\"page\") || \"1\");\n\t\tconst style = query.get(\"style\") || \"\";\n\t\tif (modalStyleId !== style) modalStyleId = style;\n\t\tif (style && !modalIsOpen) modalIsOpen = true;\n\t\telse if (!style && modalIsOpen) modalIsOpen = false;\n\t\tfilters = inputs;\n\t}\n\n\tfunction onModalPushState(e) {\n\t\tconst { search, category, author, style, page, sort } = e.detail;\n\t\tif (e.detail) {\n\t\t\tif (search || category || author) {\n\t\t\t\tinputs.search = search || \"\";\n\t\t\t\tinputs.category = category || \"\";\n\t\t\t\tinputs.author = author || \"\";\n\t\t\t\tsorting = sort;\n\t\t\t\tmodalIsOpen = false;\n\t\t\t\tfilters = inputs;\n\t\t\t\tpagination.page = parseInt(page || \"1\");\n\t\t\t} else {\n\t\t\t\tif (modalStyleId !== style) modalStyleId = style || \"\";\n\t\t\t\tif (style && !modalIsOpen) modalIsOpen = true;\n\t\t\t\telse if (!style && modalIsOpen) modalIsOpen = false;\n\t\t\t}\n\t\t}\n\t\tconsole.log(e);\n\t}\n\n\t$: updateQuery(filters, pagination, sorting, modalIsOpen, modalStyleId);\n\n\tfunction updateQuery(filters, pagination, sorting, modalIsOpen, modalStyleId) {\n\t\tconst { search, category, author, format } = filters;\n\t\tconst { page } = pagination;\n\t\tlet updated = false;\n\t\tif (query.get(\"search\") || \"\" !== search) {\n\t\t\tupdated = true;\n\t\t\tif (search) {\n\t\t\t\tquery.set(\"search\", search);\n\t\t\t} else {\n\t\t\t\tquery.delete(\"search\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"category\") || \"\" !== category) {\n\t\t\tupdated = true;\n\t\t\tif (category) {\n\t\t\t\tquery.set(\"category\", category);\n\t\t\t} else {\n\t\t\t\tquery.delete(\"category\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"author\") || \"\" !== author) {\n\t\t\tupdated = true;\n\t\t\tif (author) {\n\t\t\t\tquery.set(\"author\", author);\n\t\t\t} else {\n\t\t\t\tquery.delete(\"author\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"format\") || \"\" !== format) {\n\t\t\tupdated = true;\n\t\t\tif (format) {\n\t\t\t\tquery.set(\"format\", format);\n\t\t\t} else {\n\t\t\t\tquery.delete(\"format\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"page\") || \"1\" !== page.toString()) {\n\t\t\tupdated = true;\n\t\t\tif (page !== 1) {\n\t\t\t\tquery.set(\"page\", parseInt(page));\n\t\t\t} else {\n\t\t\t\tquery.delete(\"page\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"sort\") || defaultSorting !== sorting) {\n\t\t\tupdated = true;\n\t\t\tif (sorting !== defaultSorting) {\n\t\t\t\tquery.set(\"sort\", sorting);\n\t\t\t} else {\n\t\t\t\tquery.delete(\"sort\");\n\t\t\t}\n\t\t}\n\t\tif (query.get(\"style\") || \"\" !== modalStyleId.toString()) {\n\t\t\tupdated = true;\n\t\t\tif (modalIsOpen) {\n\t\t\t\tquery.set(\"style\", modalStyleId.toString());\n\t\t\t} else {\n\t\t\t\tquery.delete(\"style\");\n\t\t\t}\n\t\t}\n\t\tconst qs = query.toString();\n\t\tif (\"?\" + qs !== window.location.search && updated) history.pushState(query.toString(), \"\", \"?\" + qs);\n\t}\n\n\tlet promise = fetch(`${dataPrefix}search-index.json`)\n\t\t.then((r) => r.json())\n\t\t.then((json) => {\n\t\t\tstyles = json;\n\t\t});\n</script>\n\n<style>\n\t.kkrow {\n\t\tmargin-left: -5px !important;\n\t\tmargin-right: -5px !important;\n\t}\n\t.kkcol {\n\t\tpadding-left: 5px !important;\n\t\tpadding-right: 5px !important;\n\t}\n</style>\n\n<svelte:window on:popstate={onPopState} />\n<Navbar color=\"primary\" dark expand=\"md\" class=\"mb-3\"><a on:click|preventDefault={reset} href=\"/\" class=\"navbar-brand\">UserStyles.org Archive</a></Navbar>\n<Container>\n\t{#await promise}\n\t\t<Row class=\"justify-content-center\">\n\t\t\t<Spinner color=\"primary\" class=\"mx-auto\" />\n\t\t</Row>\n\t{:then}\n\t\t<div class=\"kkrow mb-3 row\">\n\t\t\t<div class=\"kkcol col-12 mb-1\">\n\t\t\t\t<Input on:keypress={onKeyPress} readonly={false} type=\"search\" placeholder=\"Search for styles...\" bind:value={inputs.search} />\n\t\t\t</div>\n\t\t\t<div class=\"kkcol col-12 col-sm-6 mb-1\">\n\t\t\t\t<Input on:keypress={onKeyPress} readonly={false} type=\"search\" placeholder=\"Category...\" bind:value={inputs.category} />\n\t\t\t</div>\n\t\t\t<div class=\"kkcol col-12 col-sm-6 mb-1\">\n\t\t\t\t<Input on:keypress={onKeyPress} readonly={false} type=\"search\" placeholder=\"Author...\" bind:value={inputs.author} />\n\t\t\t</div>\n\t\t\t<div class=\"kkcol col-12\">\n\t\t\t\t<div class=\"kkrow row\">\n\t\t\t\t\t<div class=\"kkcol col\">\n\t\t\t\t\t\t<div class=\"dropdown w-100\" class:show={sortDropdownOpen}>\n\t\t\t\t\t\t\t<button class=\"btn btn-secondary dropdown-toggle w-100\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" on:click={() => (sortDropdownOpen = !sortDropdownOpen)}> Sort by </button>\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" class:show={sortDropdownOpen} aria-labelledby=\"dropdownMenuButton\" on:click={() => (sortDropdownOpen = false)}>\n\t\t\t\t\t\t\t\t{#each sortDropdownItems as item}<button class=\"dropdown-item\" class:active={sorting === item.id} on:click={() => setSorting(item.id)}>{item.label}</button>{/each}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"kkcol col\">\n\t\t\t\t\t\t<div class=\"dropdown w-100\" class:show={formatDropdownOpen}>\n\t\t\t\t\t\t\t<button class=\"btn btn-secondary dropdown-toggle w-100\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" on:click={() => (formatDropdownOpen = !formatDropdownOpen)}> Type </button>\n\t\t\t\t\t\t\t<div class=\"dropdown-menu\" class:show={formatDropdownOpen} aria-labelledby=\"dropdownMenuButton\" on:click={() => (formatDropdownOpen = false)}>\n\t\t\t\t\t\t\t\t{#each formatDropdownItems as item}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\t\t\t\t\t\t\tclass:active={filters.format === item.id}\n\t\t\t\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\t\t\t\tfilters.format = item.id;\n\t\t\t\t\t\t\t\t\t\t\tinputs.format = item.id;\n\t\t\t\t\t\t\t\t\t\t}}>{item.label}</button>\n\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"kkcol mb-1 col\">\n\t\t\t\t\t\t<Button color=\"secondary\" class=\"w-100\" on:click={reset}>Reset</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"kkcol col\">\n\t\t\t\t\t\t<Button color=\"primary\" class=\"w-100\" on:click={update}>Search</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<Row>\n\t\t\t{#each paginatedStyles as style (style.i)}\n\t\t\t\t<Col xl=\"3\" md=\"4\" sm=\"6\" xs=\"12\" class=\"mb-4\">\n\t\t\t\t\t<StyleCard on:view={onView} styleData={style} {dataPrefix} />\n\t\t\t\t</Col>\n\t\t\t{/each}\n\t\t</Row>\n\t\t<Row>\n\t\t\t<Col class=\"d-flex justify-content-center\">\n\t\t\t\t<Pagination bind:currentPage={pagination.page} totalPages={pagination.totalPages} />\n\t\t\t</Col>\n\t\t</Row>\n\t{:catch e}\n\t\tError while downloading data\n\t\t{e}\n\t{/await}\n\n\t<StyleModal {dataPrefix} on:onPushState={onModalPushState} styleId={modalStyleId} bind:isOpen={modalIsOpen} />\n</Container>\n"
  ],
  "names": [],
  "mappings": "AAuQC,MAAM,cAAC,CAAC,AACP,WAAW,CAAE,IAAI,CAAC,UAAU,CAC5B,YAAY,CAAE,IAAI,CAAC,UAAU,AAC9B,CAAC,AACD,MAAM,cAAC,CAAC,AACP,YAAY,CAAE,GAAG,CAAC,UAAU,CAC5B,aAAa,CAAE,GAAG,CAAC,UAAU,AAC9B,CAAC"
}